{"version":3,"sources":["Color/SingleColor.js","Color/Color.js","App.js","reportWebVitals.js","index.js"],"names":["SingleColor","rgb","weight","index","hex","type","useState","alert","setAlert","bgc","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","style","backgroundColor","className","onClick","navigator","clipboard","writeText","Color","color","setColor","error","setError","Values","all","colorList","setColorList","onSubmit","e","preventDefault","colors","htmlFor","id","name","value","placeholder","onChange","target","map","oneColor","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAgCeA,EA9BK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAAW,EAC/BC,oBAAS,GADsB,mBAClDC,EADkD,KAC3CC,EAD2C,KAEnDC,EAAMR,EAAIS,KAAK,KACfC,EAAQ,WAAOP,GAUrB,OARAQ,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,WACLO,aAAaF,MAEd,CAACN,IAEF,0BACES,MAAO,CAAEC,gBAAgB,OAAD,OAASR,EAAT,MACxBS,UAAS,UAAKf,EAAQ,IAAM,eAC5BgB,QAAS,WACPX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,IALlC,UAQE,oBAAGO,UAAU,gBAAb,UAA8BhB,EAA9B,OACA,oBAAGgB,UAAU,cAAb,cAA6Bd,KAC7B,mBAAGc,UAAU,aAAb,SAA2Bb,IAC1BE,GAAS,sBAAMW,UAAU,QAAhB,qCC2CDK,G,MAjED,WAAO,IAAD,EACQjB,mBAAS,IADjB,mBACXkB,EADW,KACJC,EADI,OAEQnB,oBAAS,GAFjB,mBAEXoB,EAFW,KAEJC,EAFI,OAGgBrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,IAHnD,mBAGXC,EAHW,KAGAC,EAHA,KAelB,OACE,+BACE,oCACE,+BACE,yCADF,IACqB,yCADrB,IACwC,uCACtC,wCACA,8BACE,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,2CAGJ,qBAAKb,UAAU,iBAAf,SACE,uBAAMc,SA7BO,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,GACnCE,EAAaI,GACb,MAAOT,GACPC,GAAS,KAuBL,UACE,uBAAOS,QAAQ,MAAf,+BACA,uBACE/B,KAAK,OACLgC,GAAG,MACHC,KAAK,MACLC,MAAOf,EACPgB,YAAY,UACZC,SAAU,SAACR,GAAD,OAAOR,EAASQ,EAAES,OAAOH,QACnCrB,UAAWQ,EAAQ,QAAU,OAE/B,wBAAQrB,KAAK,SAAb,2BAGJ,qBAAKa,UAAU,oBAAf,SACGY,EAAUa,KAAI,SAACC,EAAUzC,GACxB,OACE,wBAAC,EAAD,2BACMyC,GADN,IAEEzC,MAAOA,EACP0C,IAAK1C,EACLC,IAAKwC,EAASxC,mBCjDf0C,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.1c7c9764.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\n\r\nconst SingleColor = ({ rgb, weight, index, hex, type }) => {\r\n  const [alert, setAlert] = useState(false)\r\n  const bgc = rgb.join(\",\")\r\n  const hexValue = `#${hex}`\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setAlert(false)\r\n    }, 3000)\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [alert])\r\n  return (\r\n    <article\r\n      style={{ backgroundColor: `rgb(${bgc})` }}\r\n      className={`${index > 10 && \"color-light\"}`}\r\n      onClick={() => {\r\n        setAlert(true)\r\n        navigator.clipboard.writeText(hexValue)\r\n      }}\r\n    >\r\n      <p className=\"percent-value\">{weight}%</p>\r\n      <p className=\"color-value\">#{hex}</p>\r\n      <p className=\"color-type\">{type}</p>\r\n      {alert && <span className=\"alert\">copied to clipboard</span>}\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default SingleColor\r\n","import React, { useState } from \"react\"\r\nimport Values from \"values.js\"\r\nimport SingleColor from \"./SingleColor\"\r\nimport \"./Color.css\"\r\n\r\nconst Color = () => {\r\n  const [color, setColor] = useState(\"\")\r\n  const [error, setError] = useState(false)\r\n  const [colorList, setColorList] = useState(new Values(\"#333333\").all(5))\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      let colors = new Values(color).all(5)\r\n      setColorList(colors)\r\n    } catch (error) {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <section>\r\n        <h1>\r\n          <span>Color</span> <span>Shade</span> <span>And</span>\r\n          <span>Tint</span>\r\n          <p>\r\n            <span>G</span>\r\n            <span>e</span>\r\n            <span>n</span>\r\n            <span>e</span>\r\n            <span>r</span>\r\n            <span>a</span>\r\n            <span>t</span>\r\n            <span>o</span>\r\n            <span>r</span>\r\n          </p>\r\n        </h1>\r\n        <div className=\"form-container\">\r\n          <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"hex\">Enter Hex color: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"hex\"\r\n              name=\"hex\"\r\n              value={color}\r\n              placeholder=\"#333333\"\r\n              onChange={(e) => setColor(e.target.value)}\r\n              className={error ? \"error\" : null}\r\n            />\r\n            <button type=\"submit\">Generate</button>\r\n          </form>\r\n        </div>\r\n        <div className=\"content-container\">\r\n          {colorList.map((oneColor, index) => {\r\n            return (\r\n              <SingleColor\r\n                {...oneColor}\r\n                index={index}\r\n                key={index}\r\n                hex={oneColor.hex}\r\n              />\r\n            )\r\n          })}\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Color\r\n","import React from \"react\"\nimport Color from \"./Color/Color\"\n\nconst App = () => {\n  return (\n    <div>\n      <Color />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\nreportWebVitals()\n"],"sourceRoot":""}